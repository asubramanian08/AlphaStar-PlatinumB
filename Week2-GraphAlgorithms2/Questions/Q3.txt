Moorio Kart
===========
[Memory: 32 MB CPU: 3 sec]

Bessie and Farmer John enjoy goat kart racing. The idea is very
similar to Go-Kart racing that others enjoy, except the karts
are pulled by goats and the track is made from nearby farmland.
The farmland consists of N meadows and M roads, each connecting
a pair of meadows.

Bessie wants to make a course from nearby farms. A farm is a
subset of two or more meadows within which every meadow can
reach every other meadow along a unique sequence of roads.

The nearby farmland may contain multiple farms. Suppose there
are K farms. Bessie would like to make a goat kart loop by
connecting all K farms by adding K roads of length X. Each farm
should be visited exactly once and at least one road must be
traversed inside each farm.

To make the course interesting for racers, the total length of
the track should be at least Y. Bessie wants to know the sum,
over all such interesting tracks, of the total track lengths. A
track is different from another if there are two meadows which
are adjacent (after adding the roads between farms) in one track
but not the other. Please note that only the roads chosen
matter, and not the direction the goat karts will travel along
those roads.

PROBLEM NAME: mooriokart

INPUT FORMAT:

The first line of input contains N, M, X, and Y where
1 <= N <= 1500, 1 <= M <= Nâˆ’1, and 0 <= X,Y <= 2500.

Each of the M following lines describe roads. The lines are of
the form: Ai Bi Di, meaning that meadows Ai and Bi are connected
with a road of integer length Di (1 <= Ai,Bi <= N, 0 <= Di <= 2500).
Each meadow is incident to at least one road, and there are no
cycles of roads.

In at least 70% of the test cases, it is also guaranteed that
N <= 1000 and Y <= 1000.

OUTPUT FORMAT:

Output a single integer, giving the sum of track lengths over
all interesting tracks. As the sum of track lengths can be quite
large, print the sum of lengths modulo 10^9+7.

SAMPLE INPUT:

5 3 1 12
1 2 3
2 3 4
4 5 6

SAMPLE OUTPUT:

54

This example has 6 possible tracks

1 --> 2 --> 4 --> 5 --> 1 (length 11)

1 --> 2 --> 5 --> 4 --> 1 (length 11)

2 --> 3 --> 4 --> 5 --> 2 (length 12)

2 --> 3 --> 5 --> 4 --> 2 (length 12)

1 --> 2 --> 3 --> 4 --> 5 --> 1 (length 15)

1 --> 2 --> 3 --> 5 --> 4 --> 1 (length 15)

The answer is 12+12+15+15=54, adding up only the tracks where
the length is at least 12.

Problem credits: Matt Fontaine