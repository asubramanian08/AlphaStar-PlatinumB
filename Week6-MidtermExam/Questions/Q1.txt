Robotic Retrieval

Farmer John has left robots on each of his 𝑁 pastures (3≤𝑁≤200), conveniently numbered 1…𝑁. Every
pasture 𝑖 has a numbered list of 𝑀 pastures (1≤𝑀≤200) which may be interpreted and used by the robot.
Specifically, pasture 𝑖 has the list 𝑃_(𝑖,1)…𝑃_(𝑖,𝑀) (1≤𝑃_(𝑖,𝑗)≤𝑁). A robot, when instructed to read an
element on the list, will go to the corresponding pasture, which could possibly the same pasture he is
already on.

Robots move according to a set of instructions, in the form of numbers in the range 1…𝑀. For each
instruction 𝑥, the robot moves from its current pasture 𝑝 to the 𝑥-th pasture on pasture 𝑝's numbered
list. A robot will always follow its instructions until completion, and will not stop at any pasture
for any reason, until all of the instructions have been followed.

Due to the synchronization of the robots, any set of instructions Farmer John sends will be sent to
all robots simultaneously, at which point they will all move together. Farmer John wants all of his
robots to end up at pasture 1. Help him find a set of instructions no longer than 5000000 numbers that
will lead all of his robots back to pasture 1, no matter which pasture they started in.

It is guaranteed that for all provided inputs, there exist sets of instructions that Farmer John can
use to move all of his robots to pasture 1. It can be proven that if a solution exists, then there
exists a set of instructions no longer than 5000000 numbers, under the constraints of this problem.

INPUT FORMAT

Line 1: Two space-separated integers 𝑁 and 𝑀
Lines 2..M+1: Line 𝑗+1 contains 𝑁 space-separated integers, describing the 𝑗-th pasture on each
pasture's numbered list. In particular, the 𝑖-th of these 𝑁 integers is 𝑃_(𝑖,𝑗).

OUTPUT FORMAT

Print no more than 5000000 lines, with exactly one integer in the range 1…𝑀 on each line. 

SAMPLE INPUT
4 3
4 4 1 3
1 3 2 4
4 2 3 1

SAMPLE OUTPUT
1
2
1
2
3
1
3

OUTPUT DETAILS
The following table describes the numbered list of each pasture (vertically).
                               ** Pasture# **
                              1    2    3    4
                  Element 1   4    4    1    3
                  Element 2   1    3    2    4
                  Element 3   4    2    3    1
The set of instructions below will direct robots to pasture 1 from any of the four pastures.
       Instruction#   Element#         Instruction#  Element#
            1            1                  5           3
            2            2                  6           1
            3            1                  7           3
            4            2
The following table describes the movement of robot 1.
                 * * * *  Robot in pasture  1  * * * *
        Time    CurrentPasture#    WhichElement    Next Pasture
          1            1               1                4
          2            4               2                4 (same pasture)
          3            4               1                3
          4            3               2                2
          5            2               3                2 (same pasture)
          6            2               1                4
          7            4               3                1 (success!)

Similarly: Pasture 2's robot visits pastures [2]-4-4-3-2-2-4-1.
           Pasture 3's robot visits pastures [3]-1-1-4-4-1-4-1.
           Pasture 4's robot visits pastures [4]-3-2-4-4-1-4-1.