Dreaming
========
[Memory: 64 MB CPU: 1 sec]

Serpent lives in a land which has N billabongs (water holes), 
numbered 0, ..., N - 1. There are M bidirectional trails, joining 
pairs of billabongs, which Serpent can travel along. Each pair of 
billabongs is connected (directly or indirectly) by at most one 
sequence of trails, though some pairs of billabongs may not be 
connected at all (thus, M <= N - 1). Each trail takes a certain 
number of days for Serpent to travel along it: this number may be 
different for each trail.

Serpent's friend, Kangaroo, wishes to make N - M - 1 new trails, so 
that it is possible for Serpent to travel between any pair of 
billabongs. Kangaroo can create trails between any pair of 
billabongs, and every trail that Kangaroo creates will take L days 
for Serpent to travel along it.

Additionally, Kangaroo wants to make Serpent's travels as fast as 
possible. Kangaroo will build the new trails so that the longest 
travel time between any two billabongs is as small as possible. Help 
Kangaroo and Serpent determine the longest travel time between any 
two billabongs, after Kangaroo has built the new trails in this way.

EXAMPLES:

In first the picture above there are N = 12 billabongs and M = 8 
trails. Suppose that L = 2, so that any new trail will require 
Serpent 2 days to travel. Then Kangaroo could build three new trails:

between billabongs 1 and 2;
between billabongs 1 and 6;
between billabongs 4 and 10.


The second picture above shows the final set of trails. The longest 
travel time is 18 days, between billabongs 0 and 11. This is the 
smallest result possible - no matter how Kangaroo builds the trails, 
there will be some pair of billabongs that requires Serpent to travel 
for 18 days or more.

INPUT FORMAT:

The first line of the input will consist of 3 integers: N (1 <= N 
<= 100,000), the number of billabongs, M (0 <= M <= N - 1), the 
number of trails that already exist, and L (1 <= L <= 10,000), the 
time in days that it takes Serpent to travel along a new trail.

The remaining M lines of the input will each contain 3 integers Ai, 
Bi (0 <= Ai, Bi <= N - 1), and Ti (0 <= Ti <= N - 1), specifying 
the endpoints and travel time of each pre-existing trail, so that the 
ith line joins billabongs Ai to Bi, and takes Ti days to travel in 
either direction.

OUTPUT FORMAT:

One integer - the greatest travel time (measured in days) between any 
pair of billabongs, assuming that Kangaroo has added N - M - 1 trails 
in such a way that all billabongs are connected and this greatest 
travel time is as small as possible.

SAMPLE INPUT:

12 8 2
0 8 4
8 2 2
2 7 4
5 11 3
5 1 7
1 3 1
1 9 5
10 6 3

SAMPLE OUTPUT:

18

SUBTASKS:

Subtask	| Percent | Additional Input Constraints
--------+---------+------------------------------------------------
  1     |    12	  | M = N - 2, and there are precisely one or two 
        |         | preexisting trails leading from each billabong.
        |         | In other words, there are two sets of connected  
        |         | billabongs, and in each set the trails form an 
        |         | unbranching path.
--------+---------+------------------------------------------------        
  2	|    10	  | M = N - 2 and 
        |         | N <= 100
--------+---------+------------------------------------------------
  3     |    24	  | M = N - 2
--------+---------+------------------------------------------------
  4     |    18   | There is at most one pre-existing trail leading 
        |         | from each billabong.
--------+---------+------------------------------------------------
  5     |    12	  | N <= 3,000
--------+---------+------------------------------------------------
  6     |    24	  | (None)
--------+---------+------------------------------------------------